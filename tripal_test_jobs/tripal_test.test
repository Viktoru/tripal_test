<?php

  /**
   * Prerequisites for testing
   * 1) Install PHP cURL: sudo apt-get install php5-curl or install php-curl
   * 2) Enable the simpletest module: drush pm-enable simpletest
   * 3) Run the test:  drush test-run TripalCoreTest
   *
   * Tutorial: https://www.drupal.org/simpletest-tutorial-drupal7
   */
  class Tripal_test extends DrupalWebTestCase {
	protected $privileged_user;

	/**
	 * To make the test available to the Simpletest testing interface, we
	 * implement getInfo(). This provides the user interface information
	 * that will show up on the simpletest page of our site.
	 */
	public static function getInfo() { // taking off $info
	  return array(
		'name' => 'Tripal Core unit tests',
		'description' => 'Tests the functionality of the Tripal core module is
        working correctly. WARNING: this test should only be used on an
        freshly installed Drupal site without data.',
		'group' => 'tripal_test',
	  );
	}

	/**
	 * Implements DrupalUnitTestCase::setUp().
	 *
	 * Sets up unit test environment.
	 */
	function setUp() {
	  // Enable modules required for the test.
	  $modules = array('ctools', 'views', 'tripal_core');
	  parent::setUp($modules);

	}

	function removeChado() {
	  // drop current chado and chado-related schema
	  if (chado_dbschema_exists('genetic_code')) {
		print "Dropping existing 'genetic_code' schema\n";
		db_query("drop schema genetic_code cascade");
	  }
	  if (chado_dbschema_exists('so')) {
		print "Dropping existing 'so' schema\n";
		db_query("drop schema so cascade");
	  }
	  if (chado_dbschema_exists('frange')) {
		print "Dropping existing 'frange' schema\n";
		db_query("drop schema frange cascade");
	  }
	  if (chado_dbschema_exists('chado')) {
		print "Dropping existing 'chado' schema\n";
		db_query("drop schema chado cascade");
	  }

	}

	/**
	 * Implements DrupalUnitTestCase::tearDown().
	 */
	function tearDown() {
	  // We need to remove the FK constraints on the tables before tearing
	  // them down or we get errors.
	  $result = db_query("ALTER TABLE {tripal_custom_tables} DROP CONSTRAINT tripal_custom_tables_fk1 CASCADE");
	  $this->assertTrue($result, "The constraint, tripal_custom_tables_fk1, could not be dropped");

	  // Now call the parent tearDown() function.
	  parent::tearDown();
	}


	// TEST FuNCTIONS:
	// Note: The following test functions are executed in the order they appear.
	/**
	 * Tests the Chado Schema API functions and related non API functions.
	 */
	function testTripal_test_Core() {
	  // The chado schema should NOT exist. If it does remove it
	  $result = chado_dbschema_exists('chado');
	  if ($result) {
		$this->removeChado();
		//print_r('<pre>' . print_r($result, TRUE) . '</pre>');

		// Install Chado v1.11 first
		debug("Install Chado v1.3.");
		tripal_core_install_chado('Install Chado v1.3');
		print "Install of Chado v1.3 successful!\n";
		//chado_query($vsql, array(':version' => '1.11'));
		$this->removeChado();

	  }

	  tripal_core_install_chado('Install Chado v1.11');
	  print "Install of Chado v1.11 successful!\n";

	  tripal_core_install_chado('Upgrade Chado v1.11 to v1.2');
	  print "Install of Chado v1.2 successful";
	  $this->removeChado();

	  tripal_core_install_chado('Install Chado v1.3');
	  print "Install Chado v1.3 successful";

	}

  }